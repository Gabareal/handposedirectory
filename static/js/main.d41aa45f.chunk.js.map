{"version":3,"sources":["utilities.js","Cards.js","Gestures.js","App.js","serviceWorker.js","index.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","0","color","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","Cards","poseDetected","useState","expanded","setExpanded","centerCardIndex","setCenterCardIndex","previousPose","setPreviousPose","useEffect","getCardClasses","cardIndex","relativePosition","positionClass","className","CloseGesture","GestureDescription","OpenGesture","OneGesture","TwoGesture","addCurl","Finger","Thumb","FingerCurl","HalfCurl","NoCurl","Index","Middle","Ring","Pinky","FullCurl","all","tf","then","console","log","catch","error","App","webcamRef","useRef","canvasRef","pose","setPose","modelLoaded","setModelLoaded","contentVisible","setContentVisible","runHandpose","a","handpose","net","setTimeout","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","knownGestures","GE","fp","estimate","undefined","gesture","gestures","confidence","map","maxConfidence","indexOf","max","apply","detectedpose","name","getContext","toLowerCase","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d41aa45f.chunk.js","sourcesContent":["// Points for fingers\nconst fingerJoints = {\n  thumb: [0, 1, 2, 3, 4],\n  indexFinger: [0, 5, 6, 7, 8],\n  middleFinger: [0, 9, 10, 11, 12],\n  ringFinger: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20],\n};\n\n// Infinity Gauntlet Style\nconst style = {\n  0: { color: \"yellow\", size: 15 },\n  1: { color: \"gold\", size: 6 },\n  2: { color: \"green\", size: 10 },\n  3: { color: \"gold\", size: 6 },\n  4: { color: \"gold\", size: 6 },\n  5: { color: \"purple\", size: 10 },\n  6: { color: \"gold\", size: 6 },\n  7: { color: \"gold\", size: 6 },\n  8: { color: \"gold\", size: 6 },\n  9: { color: \"blue\", size: 10 },\n  10: { color: \"gold\", size: 6 },\n  11: { color: \"gold\", size: 6 },\n  12: { color: \"gold\", size: 6 },\n  13: { color: \"red\", size: 10 },\n  14: { color: \"gold\", size: 6 },\n  15: { color: \"gold\", size: 6 },\n  16: { color: \"gold\", size: 6 },\n  17: { color: \"orange\", size: 10 },\n  18: { color: \"gold\", size: 6 },\n  19: { color: \"gold\", size: 6 },\n  20: { color: \"gold\", size: 6 },\n};\n\n// Drawing function\nexport const drawHand = (predictions, ctx) => {\n  // Check if we have predictions\n  if (predictions.length > 0) {\n    // Loop through each prediction\n    predictions.forEach((prediction) => {\n      // Grab landmarks\n      const landmarks = prediction.landmarks;\n\n      // Loop through fingers\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\n        let finger = Object.keys(fingerJoints)[j];\n        //  Loop through pairs of joints\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\n          // Get pairs of joints\n          const firstJointIndex = fingerJoints[finger][k];\n          const secondJointIndex = fingerJoints[finger][k + 1];\n\n          // Draw path\n          ctx.beginPath();\n          ctx.moveTo(\n            landmarks[firstJointIndex][0],\n            landmarks[firstJointIndex][1]\n          );\n          ctx.lineTo(\n            landmarks[secondJointIndex][0],\n            landmarks[secondJointIndex][1]\n          );\n          ctx.strokeStyle = \"white\";\n          ctx.lineWidth = 4;\n          ctx.stroke();\n        }\n      }\n\n      // Loop through landmarks and draw em\n      for (let i = 0; i < landmarks.length; i++) {\n        // Get x point\n        const x = landmarks[i][0];\n        // Get y point\n        const y = landmarks[i][1];\n        // Start drawing\n        ctx.beginPath();\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\n\n        // Set line color\n        ctx.fillStyle = style[i][\"color\"];\n        ctx.fill();\n      }\n    });\n  }\n};\n","import React, { useState, useEffect } from 'react';\n\nconst Cards = ({ poseDetected }) => {\n  // State to track card positions\n  const [expanded, setExpanded] = useState(true);\n  const [centerCardIndex, setCenterCardIndex] = useState(1); // 0, 1, or 2 (for cards 1, 2, 3)\n  const [previousPose, setPreviousPose] = useState(null);\n  \n  // Update expanded state based on pose\n  useEffect(() => {\n    // Only process if we have a pose and it's different from the previous pose\n    if (poseDetected && poseDetected !== previousPose) {\n      if (poseDetected === 'close') {\n        setExpanded(false);\n      } else if (poseDetected === 'open') {\n        setExpanded(true);\n      } else if (expanded) {\n        // Only process shifting if cards are expanded\n        if (poseDetected === 'one' && centerCardIndex > 0) {\n          // Shift left - decrease center card index\n          setCenterCardIndex(centerCardIndex - 1);\n        } else if (poseDetected === 'two' && centerCardIndex < 2) {\n          // Shift right - increase center card index\n          setCenterCardIndex(centerCardIndex + 1);\n        }\n      }\n      \n      // Update previous pose for next comparison\n      setPreviousPose(poseDetected);\n    }\n  }, [poseDetected, previousPose, expanded, centerCardIndex]);\n  \n  // Calculate position classes based on current state\n  const getCardClasses = (cardIndex) => {\n    if (!expanded) {\n      return `card card-${cardIndex + 1} collapsed`;\n    }\n    \n    // Calculate relative position (left, center, right)\n    const relativePosition = cardIndex - centerCardIndex;\n    \n    let positionClass = '';\n    if (relativePosition < 0) {\n      positionClass = 'position-left';\n    } else if (relativePosition > 0) {\n      positionClass = 'position-right';\n    } else {\n      positionClass = 'position-center';\n    }\n    \n    return `card card-${cardIndex + 1} expanded ${positionClass}`;\n  };\n  \n  return (\n    <div className=\"cards-container\">\n      <div className={getCardClasses(0)}>\n        <div className=\"card-content\">\n          <h3>Card 1</h3>\n          <p>This is the first card content</p>\n        </div>\n      </div>\n      \n      <div className={getCardClasses(1)}>\n        <div className=\"card-content\">\n          <h3>Card 2</h3>\n          <p>This is the second card content</p>\n        </div>\n      </div>\n      \n      <div className={getCardClasses(2)}>\n        <div className=\"card-content\">\n          <h3>Card 3</h3>\n          <p>This is the third card content</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;","import { GestureDescription, Finger, FingerCurl } from 'fingerpose';\n  \nconst CloseGesture = new GestureDescription('close');\nconst OpenGesture = new GestureDescription('open');\nconst OneGesture = new GestureDescription('one');\nconst TwoGesture = new GestureDescription('two');\n\nCloseGesture.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 1.0);\nCloseGesture.addCurl(Finger.Thumb, FingerCurl.NoCurl, 0.5);\n\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\n    CloseGesture.addCurl(finger, FingerCurl.FullCurl, 1.0);\n    CloseGesture.addCurl(finger, FingerCurl.HalfCurl, 0.9);\n}\n\nfor(let finger of Finger.all) {\n    OpenGesture.addCurl(finger, FingerCurl.NoCurl, 1.0);\n}\n\nOneGesture.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\nOneGesture.addCurl(Finger.Middle, FingerCurl.FullCurl, 1.0);\nOneGesture.addCurl(Finger.Middle, FingerCurl.HalfCurl, 0.9);\nOneGesture.addCurl(Finger.Ring, FingerCurl.FullCurl, 1.0);\nOneGesture.addCurl(Finger.Ring, FingerCurl.HalfCurl, 0.9);\nOneGesture.addCurl(Finger.Pinky, FingerCurl.FullCurl, 1.0);\nOneGesture.addCurl(Finger.Pinky, FingerCurl.HalfCurl, 0.9);\n\nTwoGesture.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\nTwoGesture.addCurl(Finger.Middle, FingerCurl.NoCurl, 1.0);\n  \n// ring: curled\nTwoGesture.addCurl(Finger.Ring, FingerCurl.FullCurl, 1.0);\nTwoGesture.addCurl(Finger.Ring, FingerCurl.HalfCurl, 0.9);\n\n// pinky: curled\nTwoGesture.addCurl(Finger.Pinky, FingerCurl.FullCurl, 1.0);\nTwoGesture.addCurl(Finger.Pinky, FingerCurl.HalfCurl, 0.9);\n\n\nexport {\n    CloseGesture, OpenGesture, TwoGesture, OneGesture\n}","import React, { useRef, useState, useEffect } from \"react\";\n\nimport * as tf from '@tensorflow/tfjs';\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport * as fp from \"fingerpose\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawHand } from \"./utilities\";\nimport Cards from \"./Cards\"; // Import the new Cards component\n\nimport { CloseGesture, OpenGesture, TwoGesture, OneGesture } from './Gestures.js'\n\nimport '@tensorflow/tfjs-backend-webgl';\ntf.setBackend('webgl').then(() => {\n  console.log('WebGL backend initialized successfully');\n}).catch(error => {\n  console.error('Failed to initialize WebGL backend:', error);\n  // Fallback to CPU if WebGL fails\n  tf.setBackend('cpu').then(() => {\n    console.log('Fallback to CPU backend successful');\n  });\n});\n\nfunction App() {\n  \n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  ///////// NEW STUFF ADDED STATE HOOK\n  const [pose, setPose] = useState(null); //setPose updates the emoji variable\n  const [modelLoaded, setModelLoaded] = useState(null);\n  const [contentVisible, setContentVisible] = useState(false);\n  ///////// NEW STUFF ADDED STATE HOOK\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\");\n    setModelLoaded(true);\n    \n    // Fade in the content after model is loaded\n    setTimeout(() => {\n      setContentVisible(true);\n    }, 500);\n    \n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 10);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const hand = await net.estimateHands(video);\n      // console.log(hand);\n      const knownGestures = [CloseGesture,OpenGesture,TwoGesture, OneGesture]\n\n      ///////// NEW STUFF ADDED GESTURE HANDLING\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator(knownGestures);\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\n          // console.log(gesture.gestures);\n\n          const confidence = gesture.gestures.map(\n            (prediction) => prediction.confidence\n          );\n          const maxConfidence = confidence.indexOf(\n            Math.max.apply(null, confidence)\n          );\n          // console.log(gesture.gestures[maxConfidence].name);\n          var detectedpose = gesture.gestures[maxConfidence].name\n          setPose(detectedpose);\n        }\n      }\n\n      ///////// NEW STUFF ADDED GESTURE HANDLING\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  useEffect(()=>{runHandpose()},[]);\n  useEffect(()=>{\n    if (pose) {\n      console.log(`Pose detected: ${pose}`)\n    }\n  }, [pose]);\n\n  \n  return (\n    <div className=\"App\">\n      {!modelLoaded ? (\n        <div className=\"loading-screen\">\n          <div className=\"loading-content\">\n            <div className=\"loading-spinner\"></div>\n            <p>Model is warming up... (est. 30s)</p>\n          </div>\n        </div>\n      ) : (\n        <div className={`app-content ${contentVisible ? 'visible' : ''}`}>\n          {/* Instructions banner */}\n          <div className=\"instructions-banner\">\n            <p>Open to open, Close to close, One for left, Two for right</p>\n          </div>\n          \n          {/* Cards component */}\n          <Cards poseDetected={pose?.toLowerCase()} />\n          \n          {/* Webcam and canvas */}\n          <Webcam \n            ref={webcamRef}\n            className=\"webcam mirrored\"\n          />\n          <header className=\"App-header\">\n            <canvas\n              ref={canvasRef}\n              className=\"canvas mirrored\"\n            />\n            <div className=\"pose-text\">\n              {pose ? (\n                <p>\n                  {pose} is detected!\n                </p>\n              ) : (\n                <p>No pose detected!</p>\n              )}\n            </div>\n          </header>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}